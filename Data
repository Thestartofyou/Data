# Import necessary libraries
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import accuracy_score
from sklearn.datasets import load_iris

# Load dataset (Iris dataset in this case)
iris = load_iris()

# Convert the dataset to a pandas DataFrame
data = pd.DataFrame(iris.data, columns=iris.feature_names)
data['target'] = iris.target

# Split the data into features (X) and labels (y)
X = data.drop(columns=['target'])
y = data['target']

# Split data into training and testing sets (80% training, 20% testing)
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Initialize the Decision Tree Classifier
classifier = DecisionTreeClassifier()

# Train the model
classifier.fit(X_train, y_train)

# Make predictions on the test set
y_pred = classifier.predict(X_test)

# Evaluate the modelâ€™s accuracy
accuracy = accuracy_score(y_test, y_pred)

# Output the accuracy
print(f'Accuracy of the Decision Tree Classifier: {accuracy * 100:.2f}%')
